{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet interval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    // console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    interval = userSelectedDate - options.defaultDate;\n    // console.log(interval);\n    if (interval < 1) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\n//   ++++++++++++++++++++\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n//   +++++++++++++++++++++++++ begin code ===================++\n\nconst calendar = flatpickr('#datetime-picker', options);\n// const inputTime = document.querySelector('.input-block');\nconst startBtn = document.querySelector('button');\nconst showTime = document.querySelectorAll('.value');\n\nstartBtn.disabled = true;\n\nstartBtn.addEventListener('click', event => {\n  const timer = convertMs(interval);\n\n  startBtn.disabled = false;\n\n  const repeatTime = setInterval(() => {\n    interval = userSelectedDate - new Date();\n\n    if (interval < 1) return;\n\n    const timer = convertMs(interval);\n\n    showTime[0].innerText = timer.days.toString().padStart(2, '0');\n    showTime[1].innerText = timer.hours.toString().padStart(2, '0');\n    showTime[2].innerText = timer.minutes.toString().padStart(2, '0');\n    showTime[3].innerText = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n});\n"],"names":["userSelectedDate","interval","options","selectedDates","iziToast","startBtn","convertMs","ms","days","hours","minutes","seconds","flatpickr","showTime","event","timer"],"mappings":"2FAMA,IAAIA,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErBH,EAAmBG,EAAc,CAAC,EAClCF,EAAWD,EAAmBE,EAAQ,YAElCD,EAAW,EACbG,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EAEDC,EAAS,SAAW,EAEvB,CACH,EAIA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAIiBC,EAAU,mBAAoBV,CAAO,EAEtD,MAAMG,EAAW,SAAS,cAAc,QAAQ,EAC1CQ,EAAW,SAAS,iBAAiB,QAAQ,EAEnDR,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASS,GAAS,CAG1CT,EAAS,SAAW,GAED,YAAY,IAAM,CAGnC,GAFAJ,EAAWD,EAAmB,IAAI,KAE9BC,EAAW,EAAG,OAElB,MAAMc,EAAQT,EAAUL,CAAQ,EAEhCY,EAAS,CAAC,EAAE,UAAYE,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7DF,EAAS,CAAC,EAAE,UAAYE,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9DF,EAAS,CAAC,EAAE,UAAYE,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEF,EAAS,CAAC,EAAE,UAAYE,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACjE,EAAE,GAAI,CACT,CAAC"}